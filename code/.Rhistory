# but it is really almost an average temp across texas
# (look at the numbers on the scale)
# the corresponding score is positive when temp is above average across texas
# and negative when temp is below average
p0 + geom_point(data=station_data, aes(x=x, y=y, color=PC1))
# clearly contrasting temperature along the coast versus everywhere else
# probably useful for predicting power load in Houston.
# the corresponding score is positive whenever the coast is warmer than
# the rest of texas, relatively speaking (i.e "hot for houston" and "cool for Amarillo")
p0 + geom_point(data=station_data, aes(x=x, y=y, color=PC2))
# contrasting the Rio Grande Valley and desert-like parts
# of Texas and New Mexico with everywhere else
p0 + geom_point(data=station_data, aes(x=x, y=y, color=PC3))
# contrasting central texas with elsewhere
p0 + geom_point(data=station_data, aes(x=x, y=y, color=PC4))
# far south texas vs everywhere else
p0 + geom_point(data=station_data, aes(x=x, y=y, color=PC5))
# Second we can look at the scores, i.e. go hour by hour and ask:
# what the first summary of these 256 variables?
# What the second summary?  etc
scores = pc_weather$x
p1 = pc_weather$x %>%
as.data.frame %>%
rownames_to_column('time') %>%
mutate(time = ymd_hms(time)) %>%
ggplot
# PC score 1 over time
p1 + geom_line(aes(x=time, y=PC1))
# remember that PC1 was kind of like an average temp across Texas
# units here are not interpretable -- just remember that 0 is average
# Looking year by year of PC1 versus day of year (1 - 366)
p1 + geom_line(aes(x=yday(time), y=PC1)) + facet_wrap(~year(time))
# PC2 score over time
# Not nearly so periodic
p1 + geom_line(aes(x=time, y=PC2))
p1 + geom_line(aes(x=yday(time), y=PC2)) + facet_wrap(~year(time))
# remember what PC2 represented!
# it's high when the Gulf Coast is hotter than other areas,
# relative to average temps
p0 + geom_point(data=station_data, aes(x=x, y=y, color=PC2))
# PC3 score over time
# maybe a little periodic?
p1 + geom_line(aes(x=time, y=PC3))
p1 + geom_line(aes(x=yday(time), y=PC3)) + facet_wrap(~year(time))
# as with PC2, remember what PC3 represented:
# it's high/positive when the Rio Grande Valley and west Texas are hotter
# than the rest of Texas, relative to average temperatures in those regions
p0 + geom_point(data=station_data, aes(x=x, y=y, color=PC3))
# so if you had to guess, you might expect that:
# - PC1 + PC2 will be useful for predicting load in the Coast region
# - PC1 + PC3 will be useful for predicting load in South Texas
# let's try it!
####
# Use PC features to predict power load
####
# create a new data frame
# hour of day, day of week, month as predictors
# also use the pc_weather scores
load_combined = data.frame(load_data,
hour = hour(time_stamp),
day = wday(time_stamp),
month = month(time_stamp),
pc_weather$x)
# Going back to power demand
# What about an additional variable?
KHOU_squared = load_combined$KHOU^2
load_combined$KHOU_squared = KHOU_squared
View(load_data)
station_data
head(station_data)
library(tidyverse)
library(ggplot2)
library(usmap)
library(lubridate)
library(randomForest)
library(splines)
library(pdp)
library(sf)
# Note: before loading the data,
# you'll first need to unzip the ercot folder
# (too big for GitHub if not compressed)
# Power grid load every hour for 6 1/2 years
# throughout the 8 ERCOT regions of Texas
# units of grid load are megawatts.
# This represents peak instantaneous demand for power in that hour.
# source: scraped from the ERCOT website
load_data = read.csv("../data/load_data.csv")
View(load_combined)
library(lubridate)
# example 1: of simple linear regression
data = read.csv('../data/housedata.csv')
# example 2: ERCOT
# Power grid load every hour for 6 1/2 years
# throughout the 8 ERCOT regions of Texas
# units of grid load are megawatts.
# This represents peak instantaneous demand for power in that hour.
# source: scraped from the ERCOT website
load_ercot = read.csv("../data/load_ercot.csv")
# Now weather data at the KHOU weather station
# temps in F
load_temperature = read.csv("../data/load_temperature.csv")
load_combined = merge(load_ercot, load_temperature, by = 'Time')
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8)
# second example
beer = read.csv("../data/beer.csv")
View(beer)
View(beer)
fit = lm(nbeer~height)
# second example
beer = read.csv("../data/beer.csv")
fit = lm(nbeer~height,data=beer)
summary(fit)
dev.off()
## Bootstrapping example
library(mosaic)
creatinine = read.csv("../data/creatinine.csv", header=TRUE)
setwd("~/Library/CloudStorage/Dropbox/UATX/classes/Winter2025/QR2/Quantitative-Reasoning-II/code")
## Bootstrapping example
library(mosaic)
creatinine = read.csv("../data/creatinine.csv", header=TRUE)
setwd("~/Library/CloudStorage/Dropbox/UATX/classes/Winter2025/QR2/Quantitative-Reasoning-II/code")
## Bootstrapping example
library(mosaic)
creatinine = read.csv("../data/creatinine.csv", header=TRUE)
head(creatinine)
View(creatinine)
# Look at the mean creatinine clearance rate
mean(creatinine$creatclear)
mean(creatinine$creatclear)
boot1 = do(5000)*{
mean(resample(creatinine)$creatclear)
}
hist(boot1$result)
hist(boot1$result)
abline(v=mean(creatinine$creatclear)
,col="red")
abline(v=mean(creatinine$creatclear)
,col="red",lwd=4)
sd(boot1$result)
s = sd(creatinine$creatclear)
n = nrow(creatinine)
se_closedform = sqrt(s^2/n)
se_closedform
plot(creatclear~age, data=creatinine,
pch=19, col='grey', bty='n',
ylab="creatinine score", xlab="Age")
lm1 = lm(creatclear~age, data=creatinine)
abline(lm1, lwd=2, col='blue')
coef(lm1)
boot1 = do(1000)*lm(creatclear~age, data=resample(creatinine))
head(boot1)
hist(boot1$Intercept)
hist(boot1$age)
KHOU_squared = load_combined$KHOU^2
load_combined$KHOU_squared = KHOU_squared
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
KHOU_squared = load_combined$KHOU^2
load_combined$KHOU_squared = KHOU_squared
numboot = 20
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined)))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
KHOU_squared = load_combined$KHOU^2
load_combined$KHOU_squared = KHOU_squared
numboot = 100
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined)))
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,500)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
dev.off()
## quantmod return
library(quantmod)
library(ggplot2)
# Define stock tickers
tickers <- c("AAPL", "WMT", "SPY", "INTC")
# Set date range
start_date <- as.Date("2000-01-01")  # Adjust as needed
end_date <- Sys.Date()
# Download stock data and calculate total monthly returns
get_monthly_returns <- function(ticker) {
getSymbols(ticker, src = "yahoo", from = start_date, to = end_date, auto.assign = TRUE)
# Adjusted closing prices
prices <- Ad(get(ticker))
# Convert to monthly period and compute monthly returns
monthly_prices <- to.monthly(prices, indexAt = "lastof", OHLC = FALSE)
monthly_returns <- monthlyReturn(monthly_prices)
colnames(monthly_returns) <- ticker
return(monthly_returns)
}
# Get returns for all tickers
monthly_returns_list <- lapply(tickers, get_monthly_returns)
# Combine into a single data frame
monthly_returns_df <- do.call(merge, monthly_returns_list)
# Display the data
print(head(monthly_returns_df))
data = as.data.frame(100*monthly_returns_df)
colnames(data) = c("Apple","Walmart","SP500","Intel")
pairs(data)
fit = lm(Apple ~ SP500,data)
summary(fit)
fit = lm(Apple ~ Walmart + SP500,data)
summary(fit)
fit = lm(Apple ~ Walmart,data)
summary(fit)
View(monthly_returns_list)
View(data)
fit = lm(Apple ~ Walmart,data)
summary(fit)
fit = lm(Apple ~ Walmart + SP500,data)
summary(fit)
## Bootstrapping example
library(mosaic)
creatinine = read.csv("../data/creatinine.csv", header=TRUE)
head(creatinine)
View(creatinine)
mean(creatinine$creatclear)
boot1 = do(5000)*{
mean(resample(creatinine)$creatclear)
}
boot1
hist(boot1$result)
abline(v=mean(creatinine$creatclear)
,col="red",lwd=4)
sd(boot1$result)
s = sd(creatinine$creatclear)
n = nrow(creatinine)
se_closedform = sqrt(s^2/n)
se_closedform
plot(creatclear~age, data=creatinine,
pch=19, col='grey', bty='n',
ylab="creatinine score", xlab="Age")
lm1 = lm(creatclear~age, data=creatinine)
abline(lm1, lwd=2, col='blue')
boot1 = do(1000)*lm(creatclear~age, data=resample(creatinine))
head(boot1)
hist(boot1$Intercept)
hist(boot1$age)
# bootstrapped standard errors
sd(boot1$Intercept)
sd(boot1$age)
summary(lm1)
# confidence intervals
confint(boot1)
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
KHOU_squared = load_combined$KHOU^2
load_combined$KHOU_squared = KHOU_squared
numboot = 100
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined)))
plot(load_combined$KHOU,load_combined$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,500)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,50)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,20)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,20)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,20)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,20)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,20)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
# smaller sample
load_combined_small = sample(load_combined,20)
KHOU_squared = load_combined_small$KHOU^2
load_combined_small$KHOU_squared = KHOU_squared
numboot = 200
lm2 = do(numboot)*(lm(COAST ~ KHOU + KHOU_squared, data=resample(load_combined_small)))
plot(load_combined_small$KHOU,load_combined_small$COAST,col=rgb(0,0,0,alpha=0.1),pch=19,cex=0.8,xlab="temperature (F)",ylab="power demand",ylim=c(6000,20000),xlim=c(20,106))
x = load_combined$KHOU
xmin = floor(min(x))
xmax = floor(max(x))
xnew = seq(xmin,xmax,length.out=500)
quadfit = array(NA,c(numboot,length(xnew)))
for(ii in 1:numboot){
quadfit[ii,] = lm2$Intercept[ii] + lm2$KHOU[ii]*xnew +   lm2$KHOU_squared[ii]*xnew^2
lines(xnew,quadfit[ii,],col=rgb(1,0,0,alpha=0.3),lwd=1)
}
